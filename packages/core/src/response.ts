import { Response as IResponse } from 'express';

export class Response {
    _write: IResponse['_write'];
    addListener: IResponse['addListener'];
    addTrailers: IResponse['addTrailers'];
    app: IResponse['app'];
    attachment: IResponse['attachment'];
    charset: IResponse['charset'];
    clearCookie: IResponse['clearCookie'];
    contentType: IResponse['contentType'];
    cookie: IResponse['cookie'];
    download: IResponse['download'];
    emit: IResponse['emit'];
    end: IResponse['end'];
    eventNames: IResponse['eventNames'];
    finished: IResponse['finished'];
    format: IResponse['format'];
    get: IResponse['get'];
    getHeader: IResponse['getHeader'];
    getMaxListeners: IResponse['getMaxListeners'];
    header: IResponse['header'];
    headersSent: IResponse['headersSent'];
    json: IResponse['json'];
    jsonp: IResponse['jsonp'];
    links: IResponse['links'];
    listenerCount: IResponse['listenerCount'];
    listeners: IResponse['listeners'];
    locals: IResponse['locals'];
    location: IResponse['location'];
    on: IResponse['on'];
    once: IResponse['once'];
    pipe: IResponse['pipe'];
    prependListener: IResponse['prependListener'];
    prependOnceListener: IResponse['prependOnceListener'];
    redirect: IResponse['redirect'];
    removeAllListeners: IResponse['removeAllListeners'];
    removeHeader: IResponse['removeHeader'];
    removeListener: IResponse['removeListener'];
    render: IResponse['render'];
    send: IResponse['send'];
    sendDate: IResponse['sendDate'];
    sendfile: IResponse['sendfile'];
    sendFile: IResponse['sendFile'];
    sendStatus: IResponse['sendStatus'];
    set: IResponse['set'];
    setDefaultEncoding: (encoding: string) => this;
    setHeader: IResponse['setHeader'];
    setMaxListeners: IResponse['setMaxListeners'];
    setTimeout: IResponse['setTimeout'];
    status: IResponse['status'];
    statusCode: IResponse['statusCode'];
    statusMessage: IResponse['statusMessage'];
    type: IResponse['type'];
    vary: IResponse['vary'];
    writable: IResponse['writable'];
    write: IResponse['write'];
    writeContinue: IResponse['writeContinue'];
    writeHead: IResponse['writeHead'];
}
